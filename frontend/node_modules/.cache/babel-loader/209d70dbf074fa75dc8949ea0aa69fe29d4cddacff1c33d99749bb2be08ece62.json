{"ast":null,"code":"var _jsxFileName = \"D:\\\\Usuarios\\\\FRANCO\\\\Desktop\\\\proyectoparroquia\\\\parroquia-frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Cargar usuario desde localStorage al inicio y verificar token\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const savedUser = localStorage.getItem('user');\n      const accessToken = localStorage.getItem('access_token');\n      if (savedUser && accessToken) {\n        setUser(JSON.parse(savedUser));\n\n        // Verificar si el token es v√°lido\n        try {\n          const response = await fetch('http://localhost:5000/api/users/profile', {\n            method: 'GET',\n            headers: {\n              'Authorization': `Bearer ${accessToken}`\n            }\n          });\n          if (!response.ok) {\n            // Token inv√°lido, intentar refrescar\n            await refreshToken();\n          }\n        } catch (error) {\n          console.error('Error verificando token:', error);\n          await logout();\n        }\n      }\n      setLoading(false);\n    };\n    initializeAuth();\n  }, []);\n  const login = async (email, password) => {\n    try {\n      console.log('üîê Intentando login con:', email);\n      const response = await fetch('http://localhost:5000/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      console.log('üì¶ Respuesta del login:', data);\n      if (response.ok) {\n        // ‚úÖ VERIFICAR que los tokens vienen en la respuesta\n        console.log('‚úÖ Login exitoso. Tokens recibidos:');\n        console.log('Access Token:', data.access_token ? 'S√ç' : 'NO');\n        console.log('Refresh Token:', data.refresh_token ? 'S√ç' : 'NO');\n        console.log('User:', data.user ? 'S√ç' : 'NO');\n\n        // Guardar en localStorage\n        localStorage.setItem('access_token', data.access_token);\n        localStorage.setItem('refresh_token', data.refresh_token);\n        localStorage.setItem('user', JSON.stringify(data.user));\n\n        // Verificar que se guard√≥\n        console.log('üíæ Token guardado en localStorage:', localStorage.getItem('access_token') ? 'S√ç' : 'NO');\n        setUser(data.user);\n        return {\n          success: true,\n          user: data.user\n        };\n      } else {\n        console.log('‚ùå Error en login:', data.error);\n        return {\n          success: false,\n          error: data.error || 'Error en el login'\n        };\n      }\n    } catch (error) {\n      console.log('üåê Error de conexi√≥n:', error);\n      return {\n        success: false,\n        error: 'Error de conexi√≥n con el servidor'\n      };\n    }\n  };\n  const logout = async () => {\n    try {\n      const token = localStorage.getItem('access_token');\n      if (token) {\n        await fetch('http://localhost:5000/api/auth/logout', {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n      }\n    } catch (error) {\n      console.error('Error durante logout:', error);\n    } finally {\n      setUser(null);\n      localStorage.removeItem('user');\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n    }\n  };\n  const refreshToken = async () => {\n    try {\n      const refreshToken = localStorage.getItem('refresh_token');\n      if (!refreshToken) {\n        await logout();\n        return false;\n      }\n      const response = await fetch('http://localhost:5000/api/auth/refresh', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${refreshToken}`\n        }\n      });\n      const data = await response.json();\n      if (response.ok) {\n        localStorage.setItem('access_token', data.access_token);\n        // Actualizar usuario si viene en la respuesta\n        if (data.user) {\n          setUser(data.user);\n          localStorage.setItem('user', JSON.stringify(data.user));\n        }\n        return true;\n      } else {\n        await logout();\n        return false;\n      }\n    } catch (error) {\n      console.error('Error refrescando token:', error);\n      await logout();\n      return false;\n    }\n  };\n  const hasPermission = permission => {\n    if (!user || !user.permissions) return false;\n    return user.permissions.includes(permission);\n  };\n\n  // Funci√≥n para hacer requests autenticadas con refresh autom√°tico\n  const authFetch = async (url, options = {}) => {\n    let token = localStorage.getItem('access_token');\n    const config = {\n      ...options,\n      headers: {\n        'Content-Type': 'application/json',\n        ...options.headers,\n        'Authorization': `Bearer ${token}`\n      }\n    };\n    let response = await fetch(url, config);\n\n    // Si el token expir√≥, intentar refrescar y reenviar la request\n    if (response.status === 401) {\n      const refreshed = await refreshToken();\n      if (refreshed) {\n        token = localStorage.getItem('access_token');\n        config.headers.Authorization = `Bearer ${token}`;\n        response = await fetch(url, config);\n      }\n    }\n    return response;\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout,\n      hasPermission,\n      loading,\n      authFetch // Exportar la funci√≥n para requests autenticadas\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"NiO5z6JIqzX62LS5UWDgIqbZYyY=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","loading","setLoading","initializeAuth","savedUser","localStorage","getItem","accessToken","JSON","parse","response","fetch","method","headers","ok","refreshToken","error","console","logout","login","email","password","log","body","stringify","data","json","access_token","refresh_token","setItem","success","token","removeItem","hasPermission","permission","permissions","includes","authFetch","url","options","config","status","refreshed","Authorization","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/Usuarios/FRANCO/Desktop/proyectoparroquia/parroquia-frontend/src/contexts/AuthContext.js"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  // Cargar usuario desde localStorage al inicio y verificar token\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const savedUser = localStorage.getItem('user');\n      const accessToken = localStorage.getItem('access_token');\n      \n      if (savedUser && accessToken) {\n        setUser(JSON.parse(savedUser));\n        \n        // Verificar si el token es v√°lido\n        try {\n          const response = await fetch('http://localhost:5000/api/users/profile', {\n            method: 'GET',\n            headers: {\n              'Authorization': `Bearer ${accessToken}`,\n            },\n          });\n\n          if (!response.ok) {\n            // Token inv√°lido, intentar refrescar\n            await refreshToken();\n          }\n        } catch (error) {\n          console.error('Error verificando token:', error);\n          await logout();\n        }\n      }\n      setLoading(false);\n    };\n\n    initializeAuth();\n  }, []);\n\n  const login = async (email, password) => {\n    try {\n        console.log('üîê Intentando login con:', email);\n        \n        const response = await fetch('http://localhost:5000/api/auth/login', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({ email, password }),\n        });\n\n        const data = await response.json();\n        console.log('üì¶ Respuesta del login:', data);\n\n        if (response.ok) {\n            // ‚úÖ VERIFICAR que los tokens vienen en la respuesta\n            console.log('‚úÖ Login exitoso. Tokens recibidos:');\n            console.log('Access Token:', data.access_token ? 'S√ç' : 'NO');\n            console.log('Refresh Token:', data.refresh_token ? 'S√ç' : 'NO');\n            console.log('User:', data.user ? 'S√ç' : 'NO');\n            \n            // Guardar en localStorage\n            localStorage.setItem('access_token', data.access_token);\n            localStorage.setItem('refresh_token', data.refresh_token);\n            localStorage.setItem('user', JSON.stringify(data.user));\n            \n            // Verificar que se guard√≥\n            console.log('üíæ Token guardado en localStorage:', \n                localStorage.getItem('access_token') ? 'S√ç' : 'NO');\n            \n            setUser(data.user);\n            return { success: true, user: data.user };\n        } else {\n            console.log('‚ùå Error en login:', data.error);\n            return { success: false, error: data.error || 'Error en el login' };\n        }\n    } catch (error) {\n        console.log('üåê Error de conexi√≥n:', error);\n        return { success: false, error: 'Error de conexi√≥n con el servidor' };\n    }\n};\n\n  const logout = async () => {\n    try {\n      const token = localStorage.getItem('access_token');\n      if (token) {\n        await fetch('http://localhost:5000/api/auth/logout', {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${token}`,\n          },\n        });\n      }\n    } catch (error) {\n      console.error('Error durante logout:', error);\n    } finally {\n      setUser(null);\n      localStorage.removeItem('user');\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n    }\n  };\n\n  const refreshToken = async () => {\n    try {\n      const refreshToken = localStorage.getItem('refresh_token');\n      if (!refreshToken) {\n        await logout();\n        return false;\n      }\n\n      const response = await fetch('http://localhost:5000/api/auth/refresh', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${refreshToken}`,\n        },\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        localStorage.setItem('access_token', data.access_token);\n        // Actualizar usuario si viene en la respuesta\n        if (data.user) {\n          setUser(data.user);\n          localStorage.setItem('user', JSON.stringify(data.user));\n        }\n        return true;\n      } else {\n        await logout();\n        return false;\n      }\n    } catch (error) {\n      console.error('Error refrescando token:', error);\n      await logout();\n      return false;\n    }\n  };\n\n  const hasPermission = (permission) => {\n    if (!user || !user.permissions) return false;\n    return user.permissions.includes(permission);\n  };\n\n  // Funci√≥n para hacer requests autenticadas con refresh autom√°tico\n  const authFetch = async (url, options = {}) => {\n    let token = localStorage.getItem('access_token');\n    \n    const config = {\n      ...options,\n      headers: {\n        'Content-Type': 'application/json',\n        ...options.headers,\n        'Authorization': `Bearer ${token}`,\n      },\n    };\n\n    let response = await fetch(url, config);\n\n    // Si el token expir√≥, intentar refrescar y reenviar la request\n    if (response.status === 401) {\n      const refreshed = await refreshToken();\n      if (refreshed) {\n        token = localStorage.getItem('access_token');\n        config.headers.Authorization = `Bearer ${token}`;\n        response = await fetch(url, config);\n      }\n    }\n\n    return response;\n  };\n\n  return (\n    <AuthContext.Provider value={{ \n      user, \n      login, \n      logout, \n      hasPermission, \n      loading,\n      authFetch // Exportar la funci√≥n para requests autenticadas\n    }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}