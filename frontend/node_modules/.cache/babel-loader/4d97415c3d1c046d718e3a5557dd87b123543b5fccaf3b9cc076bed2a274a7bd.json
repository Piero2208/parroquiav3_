{"ast":null,"code":"var _jsxFileName = \"D:\\\\Usuarios\\\\FRANCO\\\\Desktop\\\\proyectoparroquia\\\\parroquia-frontend\\\\src\\\\contexts\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\n// import React, { createContext, useContext, useEffect, useState } from 'react';\n\n// const AuthContext = createContext();\n\n// export const useAuth = () => useContext(AuthContext);\n\n// export const AuthProvider = ({ children }) => {\n//   const [user, setUser] = useState(null);\n//   const [loading, setLoading] = useState(true);\n\n//   // Cargar usuario desde localStorage al inicio y verificar token\n//   useEffect(() => {\n//     const initializeAuth = async () => {\n//       const savedUser = localStorage.getItem('user');\n//       const accessToken = localStorage.getItem('access_token');\n\n//       if (savedUser && accessToken) {\n//         setUser(JSON.parse(savedUser));\n\n//         // Verificar si el token es v√°lido\n//         try {\n//           const response = await fetch('http://localhost:5000/api/users/profile', {\n//             method: 'GET',\n//             headers: {\n//               'Authorization': `Bearer ${accessToken}`,\n//             },\n//           });\n\n//           if (!response.ok) {\n//             // Token inv√°lido, intentar refrescar\n//             await refreshToken();\n//           }\n//         } catch (error) {\n//           console.error('Error verificando token:', error);\n//           await logout();\n//         }\n//       }\n//       setLoading(false);\n//     };\n\n//     initializeAuth();\n//   }, []);\n\n//   const login = async (email, password) => {\n//     try {\n//         console.log('üîê Intentando login con:', email);\n\n//         const response = await fetch('http://localhost:5000/api/auth/login', {\n//             method: 'POST',\n//             headers: {\n//                 'Content-Type': 'application/json',\n//             },\n//             body: JSON.stringify({ email, password }),\n//         });\n\n//         const data = await response.json();\n//         console.log('üì¶ Respuesta del login:', data);\n\n//         if (response.ok) {\n//             console.log('‚úÖ Login exitoso. Tokens recibidos:');\n//             console.log('Access Token:', data.access_token ? 'S√ç' : 'NO');\n//             console.log('Refresh Token:', data.refresh_token ? 'S√ç' : 'NO');\n//             console.log('User:', data.user ? 'S√ç' : 'NO');\n\n//             // Guardar en localStorage\n//             localStorage.setItem('access_token', data.access_token);\n//             localStorage.setItem('refresh_token', data.refresh_token);\n//             localStorage.setItem('user', JSON.stringify(data.user));\n\n//             console.log('üíæ Token guardado en localStorage:', \n//                 localStorage.getItem('access_token') ? 'S√ç' : 'NO');\n\n//             setUser(data.user);\n//             return { success: true, user: data.user };\n//         } else {\n//             console.log('‚ùå Error en login:', data.error);\n//             return { success: false, error: data.error || 'Error en el login' };\n//         }\n//     } catch (error) {\n//         console.log('üåê Error de conexi√≥n:', error);\n//         return { success: false, error: 'Error de conexi√≥n con el servidor' };\n//     }\n//   };\n\n//   const logout = async () => {\n//     try {\n//       const token = localStorage.getItem('access_token');\n//       if (token) {\n//         await fetch('http://localhost:5000/api/auth/logout', {\n//           method: 'POST',\n//           headers: {\n//             'Authorization': `Bearer ${token}`,\n//           },\n//         });\n//       }\n//     } catch (error) {\n//       console.error('Error durante logout:', error);\n//     } finally {\n//       setUser(null);\n//       localStorage.removeItem('user');\n//       localStorage.removeItem('access_token');\n//       localStorage.removeItem('refresh_token');\n//     }\n//   };\n\n//   const refreshToken = async () => {\n//     try {\n//       const refreshToken = localStorage.getItem('refresh_token');\n//       if (!refreshToken) {\n//         await logout();\n//         return false;\n//       }\n\n//       const response = await fetch('http://localhost:5000/api/auth/refresh', {\n//         method: 'POST',\n//         headers: {\n//           'Authorization': `Bearer ${refreshToken}`,\n//         },\n//       });\n\n//       const data = await response.json();\n\n//       if (response.ok) {\n//         localStorage.setItem('access_token', data.access_token);\n//         // üîß Si se genera un nuevo refresh token, reemplazar el anterior\n//         if (data.refresh_token) {\n//           localStorage.setItem('refresh_token', data.refresh_token);\n//         }\n//         if (data.user) {\n//           setUser(data.user);\n//           localStorage.setItem('user', JSON.stringify(data.user));\n//         }\n//         return true;\n//       } else {\n//         await logout();\n//         return false;\n//       }\n//     } catch (error) {\n//       console.error('Error refrescando token:', error);\n//       await logout();\n//       return false;\n//     }\n//   };\n\n//   const hasPermission = (permission) => {\n//     if (!user || !user.permissions) return false;\n//     return user.permissions.includes(permission);\n//   };\n\n//   // Funci√≥n para hacer requests autenticadas con refresh autom√°tico\n//   const authFetch = async (url, options = {}) => {\n//     let token = localStorage.getItem('access_token');\n\n//     const config = {\n//       ...options,\n//       headers: {\n//         'Content-Type': 'application/json',\n//         ...options.headers,\n//         'Authorization': `Bearer ${token}`,\n//       },\n//     };\n\n//     let response = await fetch(url, config);\n\n//     // Si el token expir√≥, intentar refrescar y reenviar la request\n//     if (response.status === 401) {\n//       const refreshed = await refreshToken();\n//       if (refreshed) {\n//         token = localStorage.getItem('access_token');\n//         config.headers.Authorization = `Bearer ${token}`;\n//         response = await fetch(url, config);\n//       }\n//     }\n\n//     return response;\n//   };\n\n//   return (\n//     <AuthContext.Provider value={{ \n//       user, \n//       login, \n//       logout, \n//       hasPermission, \n//       loading,\n//       authFetch \n//     }}>\n//       {children}\n//     </AuthContext.Provider>\n//   );\n// };\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\nimport React, { createContext, useContext, useEffect, useState, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const useAuth = () => {\n  _s();\n  return useContext(AuthContext);\n};\n_s(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nexport const AuthProvider = ({\n  children\n}) => {\n  _s2();\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [sessionExpiring, setSessionExpiring] = useState(false);\n  //const [countdown, setCountdown] = useState(180); // 3 minutos\n  const [countdown, setCountdown] = useState(10); // 10 segundos (solo prueba)\n  //\n  const countdownRef = useRef(null);\n  const inactivityTimerRef = useRef(null);\n  const totalSessionTimerRef = useRef(null);\n\n  // ========================\n  // üü¢ Inicializaci√≥n de sesi√≥n\n  // ========================\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const savedUser = localStorage.getItem('user');\n      const accessToken = localStorage.getItem('access_token');\n      if (savedUser && accessToken) {\n        setUser(JSON.parse(savedUser));\n        try {\n          const response = await fetch('http://localhost:5000/api/users/profile', {\n            method: 'GET',\n            headers: {\n              'Authorization': `Bearer ${accessToken}`\n            }\n          });\n          if (!response.ok) await refreshToken();\n        } catch (error) {\n          console.error('Error verificando token:', error);\n          await logout();\n        }\n      }\n      setLoading(false);\n    };\n    initializeAuth();\n  }, []);\n\n  // ========================\n  // üîÅ Sincronizar logout entre pesta√±as\n  // ========================\n  useEffect(() => {\n    const syncLogout = e => {\n      if (e.key === 'logout_event') {\n        setUser(null);\n        localStorage.removeItem('user');\n        localStorage.removeItem('access_token');\n        localStorage.removeItem('refresh_token');\n      }\n    };\n    window.addEventListener('storage', syncLogout);\n    return () => window.removeEventListener('storage', syncLogout);\n  }, []);\n\n  // ========================\n  // ‚è∞ Control de inactividad\n  // ========================\n  useEffect(() => {\n    if (!user) return;\n    const resetInactivityTimers = () => {\n      clearTimeout(inactivityTimerRef.current);\n      clearTimeout(totalSessionTimerRef.current);\n      clearInterval(countdownRef.current);\n      setSessionExpiring(false);\n      setCountdown(180);\n\n      // ‚öôÔ∏è Despu√©s de 7 minutos ‚Üí mostrar aviso de expiraci√≥n\n      //inactivityTimerRef.current = setTimeout(() => {\n      //  setSessionExpiring(true);\n      //  startCountdown();\n      //}, 7 * 60 * 1000);\n      // ‚öôÔ∏è Despu√©s de 10 minutos ‚Üí cerrar sesi√≥n autom√°ticamente\n      //totalSessionTimerRef.current = setTimeout(() => {\n      //  handleAutoLogout();\n      //}, 10 * 60 * 1000);\n\n      // ‚öôÔ∏è Despu√©s de 20 segundos ‚Üí mostrar aviso de expiraci√≥n (solo pruebas)\n      inactivityTimerRef.current = setTimeout(() => {\n        setSessionExpiring(true);\n        startCountdown();\n      }, 20 * 1000);\n\n      // ‚öôÔ∏è Despu√©s de 30 segundos ‚Üí cerrar sesi√≥n autom√°ticamente (solo pruebas)\n      totalSessionTimerRef.current = setTimeout(() => {\n        handleAutoLogout();\n      }, 30 * 1000);\n    };\n    const startCountdown = () => {\n      let remaining = 180;\n      countdownRef.current = setInterval(() => {\n        remaining -= 1;\n        setCountdown(remaining);\n        if (remaining <= 0) {\n          clearInterval(countdownRef.current);\n        }\n      }, 1000);\n    };\n    const handleAutoLogout = async () => {\n      clearInterval(countdownRef.current);\n      setSessionExpiring(false);\n      await logout();\n    };\n    const handleUserActivity = () => {\n      // üü° Si ya est√° apareciendo el aviso, no hacer nada con el mouse o teclado\n      if (sessionExpiring) return;\n\n      // Solo reinicia los contadores si NO est√° el modal visible\n      resetInactivityTimers();\n    };\n    window.addEventListener('mousemove', handleUserActivity);\n    window.addEventListener('keydown', handleUserActivity);\n    window.addEventListener('scroll', handleUserActivity);\n    window.addEventListener('click', handleUserActivity);\n    return () => {\n      window.removeEventListener('mousemove', resetInactivityTimers);\n      window.removeEventListener('keydown', resetInactivityTimers);\n      window.removeEventListener('scroll', resetInactivityTimers);\n      window.removeEventListener('click', resetInactivityTimers);\n      clearTimeout(inactivityTimerRef.current);\n      clearTimeout(totalSessionTimerRef.current);\n      clearInterval(countdownRef.current);\n    };\n  }, [user]);\n\n  // ========================\n  // üîÅ Extender sesi√≥n\n  // ========================\n  const extendSession = () => {\n    setSessionExpiring(false);\n    setCountdown(180);\n    // reinicia los contadores\n    const event = new Event('mousemove');\n    window.dispatchEvent(event);\n  };\n\n  // ========================\n  // üîê Funciones de autenticaci√≥n\n  // ========================\n  const login = async (email, password) => {\n    try {\n      const response = await fetch('http://localhost:5000/api/auth/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          email,\n          password\n        })\n      });\n      const data = await response.json();\n      if (response.ok) {\n        localStorage.setItem('access_token', data.access_token);\n        localStorage.setItem('refresh_token', data.refresh_token);\n        localStorage.setItem('user', JSON.stringify(data.user));\n        setUser(data.user);\n        return {\n          success: true,\n          user: data.user\n        };\n      } else {\n        return {\n          success: false,\n          error: data.error || 'Error en el login'\n        };\n      }\n    } catch (error) {\n      return {\n        success: false,\n        error: 'Error de conexi√≥n con el servidor'\n      };\n    }\n  };\n  const logout = async () => {\n    try {\n      const token = localStorage.getItem('access_token');\n      if (token) {\n        await fetch('http://localhost:5000/api/auth/logout', {\n          method: 'POST',\n          headers: {\n            'Authorization': `Bearer ${token}`\n          }\n        });\n      }\n    } catch (error) {\n      console.error('Error durante logout:', error);\n    } finally {\n      setUser(null);\n      localStorage.removeItem('user');\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n      localStorage.setItem('logout_event', Date.now());\n    }\n  };\n  const refreshToken = async () => {\n    try {\n      const refreshToken = localStorage.getItem('refresh_token');\n      if (!refreshToken) {\n        await logout();\n        return false;\n      }\n      const response = await fetch('http://localhost:5000/api/auth/refresh', {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${refreshToken}`\n        }\n      });\n      const data = await response.json();\n      if (response.ok) {\n        localStorage.setItem('access_token', data.access_token);\n        if (data.refresh_token) {\n          localStorage.setItem('refresh_token', data.refresh_token);\n        }\n        if (data.user) {\n          setUser(data.user);\n          localStorage.setItem('user', JSON.stringify(data.user));\n        }\n        return true;\n      } else {\n        await logout();\n        return false;\n      }\n    } catch (error) {\n      console.error('Error refrescando token:', error);\n      await logout();\n      return false;\n    }\n  };\n  const hasPermission = permission => {\n    if (!user || !user.permissions) return false;\n    return user.permissions.includes(permission);\n  };\n  const authFetch = async (url, options = {}) => {\n    let token = localStorage.getItem('access_token');\n    const config = {\n      ...options,\n      headers: {\n        'Content-Type': 'application/json',\n        ...options.headers,\n        'Authorization': `Bearer ${token}`\n      }\n    };\n    let response = await fetch(url, config);\n    if (response.status === 401) {\n      const refreshed = await refreshToken();\n      if (refreshed) {\n        token = localStorage.getItem('access_token');\n        config.headers.Authorization = `Bearer ${token}`;\n        response = await fetch(url, config);\n      }\n    }\n    return response;\n  };\n\n  // ========================\n  // Render y modal\n  // ========================\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      user,\n      login,\n      logout,\n      hasPermission,\n      loading,\n      authFetch,\n      sessionExpiring,\n      countdown,\n      extendSession\n    },\n    children: [children, sessionExpiring && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-[9999]\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white p-6 rounded-2xl shadow-lg text-center max-w-sm\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"text-lg font-semibold mb-2 text-gray-800\",\n          children: \"Sesi\\xF3n a punto de expirar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 491,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600 mb-4\",\n          children: [\"Tu sesi\\xF3n se cerrar\\xE1 autom\\xE1ticamente en \", /*#__PURE__*/_jsxDEV(\"b\", {\n            children: [countdown, \"s\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 493,\n            columnNumber: 55\n          }, this), \" por inactividad.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 492,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: extendSession,\n            className: \"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\",\n            children: \"Mantener sesi\\xF3n\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 496,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: logout,\n            className: \"px-4 py-2 bg-gray-300 text-gray-800 rounded-lg hover:bg-gray-400\",\n            children: \"Cerrar ahora\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 502,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 495,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 490,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 474,\n    columnNumber: 5\n  }, this);\n};\n_s2(AuthProvider, \"kY78DzTI81jVSjcv/VVp26PYU0M=\");\n_c = AuthProvider;\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useState","useRef","jsxDEV","_jsxDEV","AuthContext","useAuth","_s","AuthProvider","children","_s2","user","setUser","loading","setLoading","sessionExpiring","setSessionExpiring","countdown","setCountdown","countdownRef","inactivityTimerRef","totalSessionTimerRef","initializeAuth","savedUser","localStorage","getItem","accessToken","JSON","parse","response","fetch","method","headers","ok","refreshToken","error","console","logout","syncLogout","e","key","removeItem","window","addEventListener","removeEventListener","resetInactivityTimers","clearTimeout","current","clearInterval","setTimeout","startCountdown","handleAutoLogout","remaining","setInterval","handleUserActivity","extendSession","event","Event","dispatchEvent","login","email","password","body","stringify","data","json","setItem","access_token","refresh_token","success","token","Date","now","hasPermission","permission","permissions","includes","authFetch","url","options","config","status","refreshed","Authorization","Provider","value","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["D:/Usuarios/FRANCO/Desktop/proyectoparroquia/parroquia-frontend/src/contexts/AuthContext.js"],"sourcesContent":["// import React, { createContext, useContext, useEffect, useState } from 'react';\n\n// const AuthContext = createContext();\n\n// export const useAuth = () => useContext(AuthContext);\n\n// export const AuthProvider = ({ children }) => {\n//   const [user, setUser] = useState(null);\n//   const [loading, setLoading] = useState(true);\n\n//   // Cargar usuario desde localStorage al inicio y verificar token\n//   useEffect(() => {\n//     const initializeAuth = async () => {\n//       const savedUser = localStorage.getItem('user');\n//       const accessToken = localStorage.getItem('access_token');\n      \n//       if (savedUser && accessToken) {\n//         setUser(JSON.parse(savedUser));\n        \n//         // Verificar si el token es v√°lido\n//         try {\n//           const response = await fetch('http://localhost:5000/api/users/profile', {\n//             method: 'GET',\n//             headers: {\n//               'Authorization': `Bearer ${accessToken}`,\n//             },\n//           });\n\n//           if (!response.ok) {\n//             // Token inv√°lido, intentar refrescar\n//             await refreshToken();\n//           }\n//         } catch (error) {\n//           console.error('Error verificando token:', error);\n//           await logout();\n//         }\n//       }\n//       setLoading(false);\n//     };\n\n//     initializeAuth();\n//   }, []);\n\n//   const login = async (email, password) => {\n//     try {\n//         console.log('üîê Intentando login con:', email);\n        \n//         const response = await fetch('http://localhost:5000/api/auth/login', {\n//             method: 'POST',\n//             headers: {\n//                 'Content-Type': 'application/json',\n//             },\n//             body: JSON.stringify({ email, password }),\n//         });\n\n//         const data = await response.json();\n//         console.log('üì¶ Respuesta del login:', data);\n\n//         if (response.ok) {\n//             console.log('‚úÖ Login exitoso. Tokens recibidos:');\n//             console.log('Access Token:', data.access_token ? 'S√ç' : 'NO');\n//             console.log('Refresh Token:', data.refresh_token ? 'S√ç' : 'NO');\n//             console.log('User:', data.user ? 'S√ç' : 'NO');\n            \n//             // Guardar en localStorage\n//             localStorage.setItem('access_token', data.access_token);\n//             localStorage.setItem('refresh_token', data.refresh_token);\n//             localStorage.setItem('user', JSON.stringify(data.user));\n            \n//             console.log('üíæ Token guardado en localStorage:', \n//                 localStorage.getItem('access_token') ? 'S√ç' : 'NO');\n            \n//             setUser(data.user);\n//             return { success: true, user: data.user };\n//         } else {\n//             console.log('‚ùå Error en login:', data.error);\n//             return { success: false, error: data.error || 'Error en el login' };\n//         }\n//     } catch (error) {\n//         console.log('üåê Error de conexi√≥n:', error);\n//         return { success: false, error: 'Error de conexi√≥n con el servidor' };\n//     }\n//   };\n\n//   const logout = async () => {\n//     try {\n//       const token = localStorage.getItem('access_token');\n//       if (token) {\n//         await fetch('http://localhost:5000/api/auth/logout', {\n//           method: 'POST',\n//           headers: {\n//             'Authorization': `Bearer ${token}`,\n//           },\n//         });\n//       }\n//     } catch (error) {\n//       console.error('Error durante logout:', error);\n//     } finally {\n//       setUser(null);\n//       localStorage.removeItem('user');\n//       localStorage.removeItem('access_token');\n//       localStorage.removeItem('refresh_token');\n//     }\n//   };\n\n//   const refreshToken = async () => {\n//     try {\n//       const refreshToken = localStorage.getItem('refresh_token');\n//       if (!refreshToken) {\n//         await logout();\n//         return false;\n//       }\n\n//       const response = await fetch('http://localhost:5000/api/auth/refresh', {\n//         method: 'POST',\n//         headers: {\n//           'Authorization': `Bearer ${refreshToken}`,\n//         },\n//       });\n\n//       const data = await response.json();\n\n//       if (response.ok) {\n//         localStorage.setItem('access_token', data.access_token);\n//         // üîß Si se genera un nuevo refresh token, reemplazar el anterior\n//         if (data.refresh_token) {\n//           localStorage.setItem('refresh_token', data.refresh_token);\n//         }\n//         if (data.user) {\n//           setUser(data.user);\n//           localStorage.setItem('user', JSON.stringify(data.user));\n//         }\n//         return true;\n//       } else {\n//         await logout();\n//         return false;\n//       }\n//     } catch (error) {\n//       console.error('Error refrescando token:', error);\n//       await logout();\n//       return false;\n//     }\n//   };\n\n//   const hasPermission = (permission) => {\n//     if (!user || !user.permissions) return false;\n//     return user.permissions.includes(permission);\n//   };\n\n//   // Funci√≥n para hacer requests autenticadas con refresh autom√°tico\n//   const authFetch = async (url, options = {}) => {\n//     let token = localStorage.getItem('access_token');\n    \n//     const config = {\n//       ...options,\n//       headers: {\n//         'Content-Type': 'application/json',\n//         ...options.headers,\n//         'Authorization': `Bearer ${token}`,\n//       },\n//     };\n\n//     let response = await fetch(url, config);\n\n//     // Si el token expir√≥, intentar refrescar y reenviar la request\n//     if (response.status === 401) {\n//       const refreshed = await refreshToken();\n//       if (refreshed) {\n//         token = localStorage.getItem('access_token');\n//         config.headers.Authorization = `Bearer ${token}`;\n//         response = await fetch(url, config);\n//       }\n//     }\n\n//     return response;\n//   };\n\n//   return (\n//     <AuthContext.Provider value={{ \n//       user, \n//       login, \n//       logout, \n//       hasPermission, \n//       loading,\n//       authFetch \n//     }}>\n//       {children}\n//     </AuthContext.Provider>\n//   );\n// };\n\n\n\n\n////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////\n\n\n\n\nimport React, { createContext, useContext, useEffect, useState, useRef } from 'react';\n\nconst AuthContext = createContext();\n\nexport const useAuth = () => useContext(AuthContext);\n\nexport const AuthProvider = ({ children }) => {\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [sessionExpiring, setSessionExpiring] = useState(false);\n  //const [countdown, setCountdown] = useState(180); // 3 minutos\n  const [countdown, setCountdown] = useState(10); // 10 segundos (solo prueba)\n  //\n  const countdownRef = useRef(null);\n  const inactivityTimerRef = useRef(null);\n  const totalSessionTimerRef = useRef(null);\n\n  // ========================\n  // üü¢ Inicializaci√≥n de sesi√≥n\n  // ========================\n  useEffect(() => {\n    const initializeAuth = async () => {\n      const savedUser = localStorage.getItem('user');\n      const accessToken = localStorage.getItem('access_token');\n\n      if (savedUser && accessToken) {\n        setUser(JSON.parse(savedUser));\n\n        try {\n          const response = await fetch('http://localhost:5000/api/users/profile', {\n            method: 'GET',\n            headers: { 'Authorization': `Bearer ${accessToken}` },\n          });\n          if (!response.ok) await refreshToken();\n        } catch (error) {\n          console.error('Error verificando token:', error);\n          await logout();\n        }\n      }\n      setLoading(false);\n    };\n\n    initializeAuth();\n  }, []);\n\n  // ========================\n  // üîÅ Sincronizar logout entre pesta√±as\n  // ========================\n  useEffect(() => {\n    const syncLogout = (e) => {\n      if (e.key === 'logout_event') {\n        setUser(null);\n        localStorage.removeItem('user');\n        localStorage.removeItem('access_token');\n        localStorage.removeItem('refresh_token');\n      }\n    };\n    window.addEventListener('storage', syncLogout);\n    return () => window.removeEventListener('storage', syncLogout);\n  }, []);\n\n  // ========================\n  // ‚è∞ Control de inactividad\n  // ========================\n  useEffect(() => {\n    if (!user) return;\n\n    const resetInactivityTimers = () => {\n      clearTimeout(inactivityTimerRef.current);\n      clearTimeout(totalSessionTimerRef.current);\n      clearInterval(countdownRef.current);\n      setSessionExpiring(false);\n      setCountdown(180);\n\n      // ‚öôÔ∏è Despu√©s de 7 minutos ‚Üí mostrar aviso de expiraci√≥n\n      //inactivityTimerRef.current = setTimeout(() => {\n      //  setSessionExpiring(true);\n      //  startCountdown();\n      //}, 7 * 60 * 1000);\n      // ‚öôÔ∏è Despu√©s de 10 minutos ‚Üí cerrar sesi√≥n autom√°ticamente\n      //totalSessionTimerRef.current = setTimeout(() => {\n      //  handleAutoLogout();\n      //}, 10 * 60 * 1000);\n\n      // ‚öôÔ∏è Despu√©s de 20 segundos ‚Üí mostrar aviso de expiraci√≥n (solo pruebas)\n      inactivityTimerRef.current = setTimeout(() => {\n        setSessionExpiring(true);\n        startCountdown();\n      }, 20 * 1000);\n\n      // ‚öôÔ∏è Despu√©s de 30 segundos ‚Üí cerrar sesi√≥n autom√°ticamente (solo pruebas)\n      totalSessionTimerRef.current = setTimeout(() => {\n        handleAutoLogout();\n      }, 30 * 1000);\n\n\n\n    };\n\n    const startCountdown = () => {\n      let remaining = 180;\n      countdownRef.current = setInterval(() => {\n        remaining -= 1;\n        setCountdown(remaining);\n        if (remaining <= 0) {\n          clearInterval(countdownRef.current);\n        }\n      }, 1000);\n    };\n\n    const handleAutoLogout = async () => {\n      clearInterval(countdownRef.current);\n      setSessionExpiring(false);\n      await logout();\n    };\n\nconst handleUserActivity = () => {\n  // üü° Si ya est√° apareciendo el aviso, no hacer nada con el mouse o teclado\n  if (sessionExpiring) return;\n\n  // Solo reinicia los contadores si NO est√° el modal visible\n  resetInactivityTimers();\n};\n\n\n  window.addEventListener('mousemove', handleUserActivity);\n  window.addEventListener('keydown', handleUserActivity);\n  window.addEventListener('scroll', handleUserActivity);\n  window.addEventListener('click', handleUserActivity);\n\n\n    return () => {\n      window.removeEventListener('mousemove', resetInactivityTimers);\n      window.removeEventListener('keydown', resetInactivityTimers);\n      window.removeEventListener('scroll', resetInactivityTimers);\n      window.removeEventListener('click', resetInactivityTimers);\n      clearTimeout(inactivityTimerRef.current);\n      clearTimeout(totalSessionTimerRef.current);\n      clearInterval(countdownRef.current);\n    };\n  }, [user]);\n\n  // ========================\n  // üîÅ Extender sesi√≥n\n  // ========================\n  const extendSession = () => {\n    setSessionExpiring(false);\n    setCountdown(180);\n    // reinicia los contadores\n    const event = new Event('mousemove');\n    window.dispatchEvent(event);\n  };\n\n  // ========================\n  // üîê Funciones de autenticaci√≥n\n  // ========================\n  const login = async (email, password) => {\n    try {\n      const response = await fetch('http://localhost:5000/api/auth/login', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ email, password }),\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        localStorage.setItem('access_token', data.access_token);\n        localStorage.setItem('refresh_token', data.refresh_token);\n        localStorage.setItem('user', JSON.stringify(data.user));\n        setUser(data.user);\n        return { success: true, user: data.user };\n      } else {\n        return { success: false, error: data.error || 'Error en el login' };\n      }\n    } catch (error) {\n      return { success: false, error: 'Error de conexi√≥n con el servidor' };\n    }\n  };\n\n  const logout = async () => {\n    try {\n      const token = localStorage.getItem('access_token');\n      if (token) {\n        await fetch('http://localhost:5000/api/auth/logout', {\n          method: 'POST',\n          headers: { 'Authorization': `Bearer ${token}` },\n        });\n      }\n    } catch (error) {\n      console.error('Error durante logout:', error);\n    } finally {\n      setUser(null);\n      localStorage.removeItem('user');\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('refresh_token');\n      localStorage.setItem('logout_event', Date.now());\n    }\n  };\n\n  const refreshToken = async () => {\n    try {\n      const refreshToken = localStorage.getItem('refresh_token');\n      if (!refreshToken) {\n        await logout();\n        return false;\n      }\n\n      const response = await fetch('http://localhost:5000/api/auth/refresh', {\n        method: 'POST',\n        headers: { 'Authorization': `Bearer ${refreshToken}` },\n      });\n\n      const data = await response.json();\n\n      if (response.ok) {\n        localStorage.setItem('access_token', data.access_token);\n        if (data.refresh_token) {\n          localStorage.setItem('refresh_token', data.refresh_token);\n        }\n        if (data.user) {\n          setUser(data.user);\n          localStorage.setItem('user', JSON.stringify(data.user));\n        }\n        return true;\n      } else {\n        await logout();\n        return false;\n      }\n    } catch (error) {\n      console.error('Error refrescando token:', error);\n      await logout();\n      return false;\n    }\n  };\n\n  const hasPermission = (permission) => {\n    if (!user || !user.permissions) return false;\n    return user.permissions.includes(permission);\n  };\n\n  const authFetch = async (url, options = {}) => {\n    let token = localStorage.getItem('access_token');\n    const config = {\n      ...options,\n      headers: {\n        'Content-Type': 'application/json',\n        ...options.headers,\n        'Authorization': `Bearer ${token}`,\n      },\n    };\n\n    let response = await fetch(url, config);\n\n    if (response.status === 401) {\n      const refreshed = await refreshToken();\n      if (refreshed) {\n        token = localStorage.getItem('access_token');\n        config.headers.Authorization = `Bearer ${token}`;\n        response = await fetch(url, config);\n      }\n    }\n\n    return response;\n  };\n\n  // ========================\n  // Render y modal\n  // ========================\n  return (\n    <AuthContext.Provider value={{\n      user,\n      login,\n      logout,\n      hasPermission,\n      loading,\n      authFetch,\n      sessionExpiring,\n      countdown,\n      extendSession\n    }}>\n      {children}\n\n      {/* üîî Modal de expiraci√≥n */}\n      {sessionExpiring && (\n        <div className=\"fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-[9999]\">\n          <div className=\"bg-white p-6 rounded-2xl shadow-lg text-center max-w-sm\">\n            <h2 className=\"text-lg font-semibold mb-2 text-gray-800\">Sesi√≥n a punto de expirar</h2>\n            <p className=\"text-gray-600 mb-4\">\n              Tu sesi√≥n se cerrar√° autom√°ticamente en <b>{countdown}s</b> por inactividad.\n            </p>\n            <div className=\"flex justify-center gap-4\">\n              <button\n                onClick={extendSession}\n                className=\"px-4 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700\"\n              >\n                Mantener sesi√≥n\n              </button>\n              <button\n                onClick={logout}\n                className=\"px-4 py-2 bg-gray-300 text-gray-800 rounded-lg hover:bg-gray-400\"\n              >\n                Cerrar ahora\n              </button>\n            </div>\n          </div>\n        </div>\n      )}\n    </AuthContext.Provider>\n  );\n};\n\n"],"mappings":";;;AAAA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKA;AACA;AACA;AACA;AACA;;AAKA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtF,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMQ,OAAO,GAAGA,CAAA;EAAAC,EAAA;EAAA,OAAMR,UAAU,CAACM,WAAW,CAAC;AAAA;AAACE,EAAA,CAAxCD,OAAO;AAEpB,OAAO,MAAME,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,GAAA;EAC5C,MAAM,C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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}