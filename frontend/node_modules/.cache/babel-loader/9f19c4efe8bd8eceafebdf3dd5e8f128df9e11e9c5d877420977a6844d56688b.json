{"ast":null,"code":"var _s = $RefreshSig$();\n// src/hooks/useCrud.js\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\nexport default function useCrud(baseUrl, options = {}) {\n  _s();\n  const {\n    autoList = true\n  } = options;\n  const {\n    authFetch\n  } = useAuth();\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const didFetchRef = useRef(false);\n  const list = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError('');\n      const resp = await authFetch(baseUrl);\n      if (!resp.ok) throw new Error('Error al listar');\n      const data = await resp.json();\n      const key = Object.keys(data).find(k => Array.isArray(data[k])) || 'items';\n      setItems(data[key] || []);\n      return {\n        success: true,\n        data: data[key] || []\n      };\n    } catch (e) {\n      setError(e.message || 'Error desconocido');\n      return {\n        success: false,\n        error: e.message\n      };\n    } finally {\n      setLoading(false);\n    }\n  }, [authFetch, baseUrl]);\n  const createItem = useCallback(async payload => {\n    try {\n      const resp = await authFetch(baseUrl, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      if (!resp.ok) {\n        const e = await resp.json().catch(() => ({}));\n        throw new Error(e.error || 'Error al crear');\n      }\n      const data = await resp.json();\n      const item = data.item || data.role || data.user || data.data;\n      if (item) setItems(prev => [item, ...prev]);\n      return {\n        success: true,\n        data\n      };\n    } catch (e) {\n      return {\n        success: false,\n        error: e.message\n      };\n    }\n  }, [authFetch, baseUrl]);\n  const updateItem = useCallback(async (id, payload) => {\n    try {\n      const resp = await authFetch(`${baseUrl}/${id}`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(payload)\n      });\n      if (!resp.ok) {\n        const e = await resp.json().catch(() => ({}));\n        throw new Error(e.error || 'Error al actualizar');\n      }\n      const data = await resp.json();\n      const item = data.item || data.role || data.user || data.data;\n      if (item) setItems(prev => prev.map(i => i.id === id ? item : i));\n      return {\n        success: true,\n        data\n      };\n    } catch (e) {\n      return {\n        success: false,\n        error: e.message\n      };\n    }\n  }, [authFetch, baseUrl]);\n  const removeItem = useCallback(async id => {\n    try {\n      const resp = await authFetch(`${baseUrl}/${id}`, {\n        method: 'DELETE'\n      });\n      if (!resp.ok) {\n        const e = await resp.json().catch(() => ({}));\n        throw new Error(e.error || 'Error al eliminar');\n      }\n      setItems(prev => prev.filter(i => i.id !== id));\n      return {\n        success: true\n      };\n    } catch (e) {\n      return {\n        success: false,\n        error: e.message\n      };\n    }\n  }, [authFetch, baseUrl]);\n  const updateStatus = useCallback(async (id, status) => {\n    try {\n      const resp = await authFetch(`${baseUrl}/${id}/status`, {\n        method: 'PUT',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          status\n        })\n      });\n      if (!resp.ok) {\n        const e = await resp.json().catch(() => ({}));\n        throw new Error(e.error || 'Error al cambiar estado');\n      }\n      const data = await resp.json();\n      const item = data.item || data.role || data.user || data.data;\n      if (item) setItems(prev => prev.map(i => i.id === id ? item : i));\n      return {\n        success: true,\n        data\n      };\n    } catch (e) {\n      return {\n        success: false,\n        error: e.message\n      };\n    }\n  }, [authFetch, baseUrl]);\n  const api = useMemo(() => ({\n    list,\n    createItem,\n    updateItem,\n    removeItem,\n    updateStatus\n  }), [list, createItem, updateItem, removeItem, updateStatus]);\n  useEffect(() => {\n    if (!autoList) return;\n    if (didFetchRef.current) return;\n    didFetchRef.current = true;\n    list();\n  }, [list, autoList]);\n  return {\n    items,\n    setItems,\n    loading,\n    error,\n    ...api\n  };\n}\n_s(useCrud, \"vSc+UbQe3RsC8vkIbJfpigQWwqo=\", false, function () {\n  return [useAuth];\n});","map":{"version":3,"names":["useCallback","useEffect","useMemo","useRef","useState","useAuth","useCrud","baseUrl","options","_s","autoList","authFetch","items","setItems","loading","setLoading","error","setError","didFetchRef","list","resp","ok","Error","data","json","key","Object","keys","find","k","Array","isArray","success","e","message","createItem","payload","method","headers","body","JSON","stringify","catch","item","role","user","prev","updateItem","id","map","i","removeItem","filter","updateStatus","status","api","current"],"sources":["D:/Usuarios/FRANCO/Desktop/parroquav3/frontend/src/hooks/useCrud.js"],"sourcesContent":["// src/hooks/useCrud.js\nimport { useCallback, useEffect, useMemo, useRef, useState } from 'react';\nimport { useAuth } from '../contexts/AuthContext';\n\nexport default function useCrud(baseUrl, options = {}) {\n  const { autoList = true } = options;\n  const { authFetch } = useAuth();\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const didFetchRef = useRef(false);\n\n  const list = useCallback(async () => {\n    try {\n      setLoading(true);\n      setError('');\n      const resp = await authFetch(baseUrl);\n      if (!resp.ok) throw new Error('Error al listar');\n      const data = await resp.json();\n      const key = Object.keys(data).find(k => Array.isArray(data[k])) || 'items';\n      setItems(data[key] || []);\n      return { success: true, data: data[key] || [] };\n    } catch (e) {\n      setError(e.message || 'Error desconocido');\n      return { success: false, error: e.message };\n    } finally {\n      setLoading(false);\n    }\n  }, [authFetch, baseUrl]);\n\n  const createItem = useCallback(async (payload) => {\n    try {\n      const resp = await authFetch(baseUrl, {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(payload)\n      });\n      if (!resp.ok) {\n        const e = await resp.json().catch(() => ({}));\n        throw new Error(e.error || 'Error al crear');\n      }\n      const data = await resp.json();\n      const item = data.item || data.role || data.user || data.data;\n      if (item) setItems(prev => [item, ...prev]);\n      return { success: true, data };\n    } catch (e) {\n      return { success: false, error: e.message };\n    }\n  }, [authFetch, baseUrl]);\n\n  const updateItem = useCallback(async (id, payload) => {\n    try {\n      const resp = await authFetch(`${baseUrl}/${id}`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(payload)\n      });\n      if (!resp.ok) {\n        const e = await resp.json().catch(() => ({}));\n        throw new Error(e.error || 'Error al actualizar');\n      }\n      const data = await resp.json();\n      const item = data.item || data.role || data.user || data.data;\n      if (item) setItems(prev => prev.map(i => (i.id === id ? item : i)));\n      return { success: true, data };\n    } catch (e) {\n      return { success: false, error: e.message };\n    }\n  }, [authFetch, baseUrl]);\n\n  const removeItem = useCallback(async (id) => {\n    try {\n      const resp = await authFetch(`${baseUrl}/${id}`, { method: 'DELETE' });\n      if (!resp.ok) {\n        const e = await resp.json().catch(() => ({}));\n        throw new Error(e.error || 'Error al eliminar');\n      }\n      setItems(prev => prev.filter(i => i.id !== id));\n      return { success: true };\n    } catch (e) {\n      return { success: false, error: e.message };\n    }\n  }, [authFetch, baseUrl]);\n\n  const updateStatus = useCallback(async (id, status) => {\n    try {\n      const resp = await authFetch(`${baseUrl}/${id}/status`, {\n        method: 'PUT',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({ status })\n      });\n      if (!resp.ok) {\n        const e = await resp.json().catch(() => ({}));\n        throw new Error(e.error || 'Error al cambiar estado');\n      }\n      const data = await resp.json();\n      const item = data.item || data.role || data.user || data.data;\n      if (item) setItems(prev => prev.map(i => (i.id === id ? item : i)));\n      return { success: true, data };\n    } catch (e) {\n      return { success: false, error: e.message };\n    }\n  }, [authFetch, baseUrl]);\n\n  const api = useMemo(() => ({ list, createItem, updateItem, removeItem, updateStatus }), [list, createItem, updateItem, removeItem, updateStatus]);\n\n  useEffect(() => {\n    if (!autoList) return;\n    if (didFetchRef.current) return;\n    didFetchRef.current = true;\n    list();\n  }, [list, autoList]);\n\n  return { items, setItems, loading, error, ...api };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}